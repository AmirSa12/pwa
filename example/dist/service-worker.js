
        const manifestHash = "kb6zgs";
        
        /* Qwik Service Worker */
const appBundles=[["q-03632553.js",[34,35],["e0ssiDXoeAM"]],["q-05e69ccf.js",[34,35],["02wMImzEAbk","fX0bDjeJa0E","RPDJAz33WLA","TxCFOy819ag"]],["q-189d47a5.js",[34]],["q-1bafc09a.js",[34]],["q-1e4b827a.js",[34],["HmT6JmehgDo","KUR09Z0zJfU"]],["q-24398585.js",[34],["hkexvcMNyK0"]],["q-2548dd79.js",[34,35],["caKYKJ4GELk"]],["q-36719f3a.js",[]],["q-3747bd76.js",[34]],["q-44e8c821.js",[34],["A5bZC7WO00A"]],["q-5bb9a0eb.js",[34,35],["8gdLBszqbaM","i1Cv0pYJNR0"]],["q-5f570983.js",[34],["J0mUe0DHXqs"]],["q-6455d4e4.js",[34],["yrXf8TABPk0"]],["q-663033b0.js",[],["DyVc0YBIqQU"]],["q-7b856c3b.js",[8,34],["X64m0yS90jw"]],["q-873f19b2.js",[34]],["q-89376954.js",[34,35],["wOIPfiQ04l4"]],["q-8aab72ed.js",[34,35]],["q-90ef1574.js",[17,34,35],["al5uLADfhEs"]],["q-93131cb5.js",[34]],["q-9484bc55.js",[34,35],["0xi2YtajgF0","9v1Hf1YRjgA","LmzIsaVlxUU","oN3CwdDwbGM"]],["q-99fe9f4c.js",[34],["Q8Wu3fx2Bfc"]],["q-9b821217.js",[],["hIs0AEB7UHI"]],["q-c0680451.js",[34]],["q-c739e70e.js",[34,35],["BUbtvTyvVRE","WmYC5H00wtI"]],["q-c7660d35.js",[34,35]],["q-c8b44584.js",[34]],["q-c946bf16.js",[34,35],["Nk9PlpjQm9Y","p9MSze0ojs4"]],["q-cb438523.js",[34,35],["kJtr4yabAtA","r4b1082FaNk"]],["q-e763c653.js",[34],["cow80S9WG2o","mUX1sewpF0c","qD7GZY5npAA","YkPYwfECpq4"]],["q-e7d45e0a.js",[34,35],["eBQ0vFsFKsk"]],["q-ee24712b.js",[34,35],["hryJse7o0o4"]],["q-f9f7ea92.js",[8,34],["6Ju0tW0w5aI","6m0siUSeDh8","jNAQZbKNt5g","Tr4mXxF6f60"]],["q-fc869def.js",[25,34,35],["UwDt2jbfcUg"]],["q-fced6c94.js",[]],["q-feb5c4ac.js",[34]]];
const libraryBundleIds=[1];
const linkBundles=[[/^\/$/,[25,4,19,14]],[/^\/demo\/flower\/?$/,[25,4,26,20]],[/^\/demo\/todolist\/?$/,[25,4,17,18]],[/^\/dynamic\/([^/]+?)\/?$/,[25,4,23,28]],[/^\/static\/([^/]+?)\/?$/,[25,4,3,28]]];

        const publicDirAssets = ["apple-touch-icon-180x180.png","favicon.ico","favicon.svg","manifest.json","maskable-icon-512x512.png","pwa-144x144.png","pwa-192x192.png","pwa-512x512.png","pwa-64x64.png","robots.txt","screenshot.png","fonts/poppins-400.woff2","fonts/poppins-500.woff2","fonts/poppins-700.woff2"];
        const emittedAssets = ["build/q-2e9da536.webp","build/q-aed62408.webp","build/q-0c26d3ee.webp","build/q-b17755ae.webp","build/q-df840595.webp","build/q-027f67b0.css","q-manifest.json"];
        const routes = [{ pathname: "/", pattern: new RegExp("^\\/$"),
                hasParams: false
             },
{ pathname: "/demo/flower/", pattern: new RegExp("^\\/demo\\/flower\\/?$"),
                hasParams: false
             },
{ pathname: "/demo/todolist/", pattern: new RegExp("^\\/demo\\/todolist\\/?$"),
                hasParams: false
             },
{ pathname: "/dynamic/[id]/", pattern: new RegExp("^\\/dynamic\\/([^/]+?)\\/?$"),
                hasParams: true
             },
{ pathname: "/static/[id]/", pattern: new RegExp("^\\/static\\/([^/]+?)\\/?$"),
                hasParams: true
             }];
        
        const k="QwikBuild",E=new Set,v=new Map,y=[],W=(n,e)=>e.filter(t=>!n.some(s=>t.endsWith(s[0]))),D=(n,e)=>!!e&&!H(e),H=n=>{const e=n.headers.get("Cache-Control")||"";return e.includes("no-cache")||e.includes("max-age=0")},S=(n,e)=>n.some(t=>e.endsWith("/"+t[0])),F=(n,e)=>n.find(t=>t[0]===e),T=(n,e)=>e.map(t=>n[t]?n[t][0]:null),j=(n,e)=>e.map(t=>n.get(t)).filter(t=>t!=null),B=n=>{const e=new Map;for(const t of n){const s=t[2];if(s)for(const a of s)e.set(a,t[0])}return e},O=(n,e,t,s)=>new Promise((a,c)=>{const r=s.url,i=t.get(r);if(i)i.push([a,c]);else{const o=u=>{const l=t.get(r);if(l){t.delete(r);for(const[p]of l)p(u.clone())}else a(u.clone())},h=u=>{const l=t.get(r);if(l){t.delete(r);for(const[p,M]of l)M(u)}else c(u)};t.set(r,[[a,c]]),n.match(r).then(u=>{if(D(s,u))o(u);else return e(s).then(async l=>{l.ok&&await n.put(r,l.clone()),o(l)})}).catch(u=>n.match(r).then(l=>{l?o(l):h(u)}))}}),C=(n,e,t,s,a,c=!1)=>{const r=()=>{for(;y.length>0&&v.size<6;){const o=y.shift(),h=new Request(o);E.has(o)?r():(E.add(o),O(e,t,v,h).finally(r))}},i=o=>{try{const h=F(n,o);if(h){const u=T(n,h[1]),l=new URL(o,s).href,p=y.indexOf(l);p>-1?c&&(y.splice(p,1),y.unshift(l)):c?y.unshift(l):y.push(l),u.forEach(i)}}catch(h){console.error(h)}};Array.isArray(a)&&a.forEach(i),r()},$=(n,e,t,s,a,c,r)=>{try{C(n,s,a,c,T(n,e))}catch(i){console.error(i)}for(const i of r)try{for(const o of t){const[h,u]=o;if(h.test(i)){C(n,s,a,c,T(n,u));break}}}catch(o){console.error(o)}},G=(n,e,t,s)=>{try{const a=s.href.split("/"),c=a[a.length-1];a[a.length-1]="";const r=new URL(a.join("/"));C(n,e,t,r,[c],!0)}catch(a){console.error(a)}},Q=(n,e,t,s)=>{const a=n.fetch.bind(n),c=B(e);n.addEventListener("fetch",r=>{const i=r.request;if(i.method==="GET"){const o=new URL(i.url);S(e,o.pathname)&&r.respondWith(n.caches.open(k).then(h=>(G(e,h,a,o),O(h,a,v,i))))}}),n.addEventListener("message",async({data:r})=>{if(r.type==="qprefetch"&&typeof r.base=="string"){const i=await n.caches.open(k),o=new URL(r.base,n.origin);Array.isArray(r.links)&&$(e,t,s,i,a,o,r.links),Array.isArray(r.bundles)&&C(e,i,a,o,r.bundles),Array.isArray(r.symbols)&&C(e,i,a,o,j(c,r.symbols))}}),n.addEventListener("activate",()=>{(async()=>{try{const r=await n.caches.open(k),o=(await r.keys()).map(u=>u.url),h=W(e,o);await Promise.all(h.map(u=>r.delete(u)))}catch(r){console.error(r)}})()})},V=()=>{typeof self<"u"&&typeof appBundles<"u"&&Q(self,appBundles,libraryBundleIds,linkBundles)};try{self["workbox:core:7.0.0"]&&_()}catch{}const z=(n,...e)=>{let t=n;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},J=z;class f extends Error{constructor(e,t){const s=J(e,t);super(s),this.name=e,this.details=t}}const d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},P=n=>[d.prefix,n,d.suffix].filter(e=>e&&e.length>0).join("-"),X=n=>{for(const e of Object.keys(d))n(e)},L={updateDetails:n=>{X(e=>{typeof n[e]=="string"&&(d[e]=n[e])})},getGoogleAnalyticsName:n=>n||P(d.googleAnalytics),getPrecacheName:n=>n||P(d.precache),getPrefix:()=>d.prefix,getRuntimeName:n=>n||P(d.runtime),getSuffix:()=>d.suffix};function x(n,e){const t=e();return n.waitUntil(t),t}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const Y="__WB_REVISION__";function Z(n){if(!n)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(typeof n=="string"){const c=new URL(n,location.href);return{cacheKey:c.href,url:c.href}}const{revision:e,url:t}=n;if(!t)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(!e){const c=new URL(t,location.href);return{cacheKey:c.href,url:c.href}}const s=new URL(t,location.href),a=new URL(t,location.href);return s.searchParams.set(Y,e),{cacheKey:s.href,url:a.href}}class ee{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;s?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return s}}}class te{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const a=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}let w;function se(){if(w===void 0){const n=new Response("");if("body"in n)try{new Response(n.body),w=!0}catch{w=!1}w=!1}return w}async function ne(n,e){let t=null;if(n.url&&(t=new URL(n.url).origin),t!==self.location.origin)throw new f("cross-origin-copy-response",{origin:t});const s=n.clone(),a={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=e?e(a):a,r=se()?s.body:await s.blob();return new Response(r,c)}const ae=n=>new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),"");function A(n,e){const t=new URL(n);for(const s of e)t.searchParams.delete(s);return t.href}async function re(n,e,t,s){const a=A(e.url,t);if(e.url===a)return n.match(e,s);const c=Object.assign(Object.assign({},s),{ignoreSearch:!0}),r=await n.keys(e,c);for(const i of r){const o=A(i.url,t);if(a===o)return n.match(i,s)}}class ce{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const ie=new Set;async function oe(){for(const n of ie)await n()}function le(n){return new Promise(e=>setTimeout(e,n))}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function b(n){return typeof n=="string"?new Request(n):n}class he{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new ce,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=b(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const r=await t.preloadResponse;if(r)return r}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const r of this.iterateCallbacks("requestWillFetch"))s=await r({request:s.clone(),event:t})}catch(r){if(r instanceof Error)throw new f("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const c=s.clone();try{let r;r=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const i of this.iterateCallbacks("fetchDidSucceed"))r=await i({event:t,request:c,response:r});return r}catch(r){throw a&&await this.runCallbacks("fetchDidFail",{error:r,event:t,originalRequest:a.clone(),request:c.clone()}),r}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=b(e);let s;const{cacheName:a,matchOptions:c}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},c),{cacheName:a});s=await caches.match(r,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:a,matchOptions:c,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,t){const s=b(e);await le(0);const a=await this.getCacheKey(s,"write");if(!t)throw new f("cache-put-with-no-response",{url:ae(a.url)});const c=await this._ensureResponseSafeToCache(t);if(!c)return!1;const{cacheName:r,matchOptions:i}=this._strategy,o=await self.caches.open(r),h=this.hasCallback("cacheDidUpdate"),u=h?await re(o,a.clone(),["__WB_REVISION__"],i):null;try{await o.put(a,h?c.clone():c)}catch(l){if(l instanceof Error)throw l.name==="QuotaExceededError"&&await oe(),l}for(const l of this.iterateCallbacks("cacheDidUpdate"))await l({cacheName:r,oldResponse:u,newResponse:c.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const c of this.iterateCallbacks("cacheKeyWillBeUsed"))a=b(await c({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield c=>{const r=Object.assign(Object.assign({},c),{state:s});return t[e](r)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class ue{constructor(e={}){this.cacheName=L.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,c=new he(this,{event:t,request:s,params:a}),r=this._getResponse(c,s,t),i=this._awaitComplete(r,c,s,t);return[r,i]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new f("no-response",{url:t.url})}catch(c){if(c instanceof Error){for(const r of e.iterateCallbacks("handlerDidError"))if(a=await r({error:c,event:s,request:t}),a)break}if(!a)throw c}for(const c of e.iterateCallbacks("handlerWillRespond"))a=await c({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let c,r;try{c=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:c}),await t.doneWaiting()}catch(i){i instanceof Error&&(r=i)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:c,error:r}),t.destroy(),r)throw r}}class g extends ue{constructor(e={}){e.cacheName=L.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(this._fallbackToNetwork){const c=a.integrity,r=e.integrity,i=!r||r===c;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?r||c:void 0})),c&&i&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new f("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new f("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==g.copyRedirectedCacheableResponsesPlugin&&(a===g.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);t===0?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:n}){return!n||n.status>=400?null:n}};g.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:n}){return n.redirected?await ne(n):n}};class fe{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new g({cacheName:L.getPrecacheName(e),plugins:[...t,new te({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:a,url:c}=Z(s),r=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(c)&&this._urlsToCacheKeys.get(c)!==a)throw new f("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(c),secondEntry:a});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==s.integrity)throw new f("add-to-cache-list-conflicting-integrities",{url:c});this._cacheKeysToIntegrities.set(a,s.integrity)}if(this._urlsToCacheKeys.set(c,a),this._urlsToCacheModes.set(c,r),t.length>0){const i=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(i)}}}install(e){return x(e,async()=>{const t=new ee;this.strategy.plugins.push(t);for(const[c,r]of this._urlsToCacheKeys){const i=this._cacheKeysToIntegrities.get(r),o=this._urlsToCacheModes.get(c),h=new Request(c,{integrity:i,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:h,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}})}activate(e){return x(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),c=[];for(const r of s)a.has(r.url)||(await t.delete(r),c.push(r.url));return{deletedURLs:c}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new f("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let K;const N=()=>(K||(K=new fe),K);try{self["workbox:routing:7.0.0"]&&_()}catch{}const q="GET",U=n=>n&&typeof n=="object"?n:{handle:n};class m{constructor(e,t,s=q){this.handler=U(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=U(e)}}class de extends m{constructor(e,t,s){const a=({url:c})=>{const r=e.exec(c.href);if(r&&!(c.origin!==location.origin&&r.index!==0))return r.slice(1)};super(a,t,s)}}class pe{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const c=new Request(...a);return this.handleRequest({request:c,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:c,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let i=r&&r.handler;const o=e.method;if(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return;let h;try{h=i.handle({url:s,request:e,event:t,params:c})}catch(l){h=Promise.reject(l)}const u=r&&r.catchHandler;return h instanceof Promise&&(this._catchHandler||u)&&(h=h.catch(async l=>{if(u)try{return await u.handle({url:s,request:e,event:t,params:c})}catch(p){p instanceof Error&&(l=p)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw l})),h}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const c=this._routes.get(s.method)||[];for(const r of c){let i;const o=r.match({url:e,sameOrigin:t,request:s,event:a});if(o)return i=o,(Array.isArray(i)&&i.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(i=void 0),{route:r,params:i}}return{}}setDefaultHandler(e,t=q){this._defaultHandlerMap.set(t,U(e))}setCatchHandler(e){this._catchHandler=U(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new f("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new f("unregister-route-route-not-registered")}}let R;const ge=()=>(R||(R=new pe,R.addFetchListener(),R.addCacheListener()),R);function I(n,e,t){let s;if(typeof n=="string"){const c=new URL(n,location.href),r=({url:i})=>i.href===c.href;s=new m(r,e,t)}else if(n instanceof RegExp)s=new de(n,e,t);else if(typeof n=="function")s=new m(n,e,t);else if(n instanceof m)s=n;else throw new f("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return ge().registerRoute(s),s}function ye(n,e=[]){for(const t of[...n.searchParams.keys()])e.some(s=>s.test(t))&&n.searchParams.delete(t);return n}function*me(n,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:a}={}){const c=new URL(n,location.href);c.hash="",yield c.href;const r=ye(c,e);if(yield r.href,t&&r.pathname.endsWith("/")){const i=new URL(r.href);i.pathname+=t,yield i.href}if(s){const i=new URL(r.href);i.pathname+=".html",yield i.href}if(a){const i=a({url:c});for(const o of i)yield o.href}}class we extends m{constructor(e,t){const s=({request:a})=>{const c=e.getURLsToCacheKeys();for(const r of me(a.url,t)){const i=c.get(r);if(i){const o=e.getIntegrityForCacheKey(i);return{cacheKey:i,integrity:o}}}};super(s,e.strategy)}}function Re(n){const e=N(),t=new we(e,n);I(t)}const Ce="-precache-",be=async(n,e=Ce)=>{const s=(await self.caches.keys()).filter(a=>a.includes(e)&&a.includes(self.registration.scope)&&a!==n);return await Promise.all(s.map(a=>self.caches.delete(a))),s};function _e(){self.addEventListener("activate",n=>{const e=L.getPrecacheName();n.waitUntil(be(e).then(t=>{}))})}function Ue(n){return N().createHandlerBoundToURL(n)}function Le(n){N().precache(n)}function ke(n,e){Le(n),Re(e)}class Pe extends m{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super(a=>this._match(a),e),this._allowlist=t,this._denylist=s}_match({url:e,request:t}){if(t&&t.mode!=="navigate")return!1;const s=e.pathname+e.search;for(const a of this._denylist)if(a.test(s))return!1;return!!this._allowlist.some(a=>a.test(s))}}const Ke=[...publicDirAssets,...emittedAssets];_e();ke(Ne([...routes.map(n=>n.pathname),...Ke],manifestHash));for(const n of routes)I(new Pe(Ue(n.pathname),{allowlist:[n.pattern]}));V();addEventListener("install",()=>self.skipWaiting());addEventListener("activate",()=>self.clients.claim());const ve="/build/",Te=new MessageEvent("message",{data:{type:"qprefetch",base:ve,links:routes.map(n=>n.pathname),bundles:appBundles.map(n=>n[0])}});self.dispatchEvent(Te);function Ne(n,e){const t=/^build\/q-([a-f0-9]{8})\./;return n.map(s=>{const a=s.match(t);return{url:s,revision:`${a?a[1]:e}`}})}

        
        